name: 'expense-tracker'
version: '3.8'

services:
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_KRAFT_MODE: "true"  # This enables KRaft mode in Kafka.
      KAFKA_PROCESS_ROLES: controller,broker  # Kafka acts as both broker and controller.
      KAFKA_NODE_ID: 1  # A unique ID for this Kafka instance.
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@localhost:9093"  # Defines the controller voters.
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LOG_DIRS: /var/lib/kafka/data  # Where Kafka stores its logs.
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"  # Kafka will automatically create topics if needed.
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1  # Since weâ€™re running one broker, one replica is enough.
      KAFKA_LOG_RETENTION_HOURS: 168  # Keep logs for 7 days.
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0  # No delay for consumer rebalancing.
      CLUSTER_ID: "5PPSWmvbSpyRtgAAtrXoNQ"  # A unique ID for the Kafka cluster.
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  mysql:
    image: mysql:8.3.0
    container_name: mysql-8.3.0
    ports:
      - "3306:3306"
    environment:
        MYSQL_DATABASE: expense_tracker
        MYSQL_USER: 'test'
        MYSQL_ROOT_USER: 'root'
        MYSQL_PASSWORD: 'password'
        MYSQL_ROOT_PASSWORD: 'password'
    volumes:
      - mysql-db:/var/lib/mysql

  user-service:
    image: user-service
    container_name: user-service
    environment:
      KAFKA_HOST: kafka
      MYSQL_HOST: mysql
    depends_on:
      - kafka
      - mysql

  auth-service:
    image: auth-service
    container_name: auth-service
    environment:
      KAFKA_HOST: kafka
      MYSQL_HOST: mysql
    depends_on:
      - kafka
      - mysql

  expense-service:
    image: expense-service
    container_name: expense-service
    environment:
      KAFKA_HOST: kafka
      MYSQL_HOST: mysql
    depends_on:
      - kafka
      - mysql

  data-service:
    image: data-service
    container_name: data-service
    restart: unless-stopped
    environment:
      KAFKA_HOST: kafka
    env_file:
      - ../.env
    depends_on:
      - kafka
      - expense-service

  kong:
    image: kong/kong-gateway:3.8.0.0
    container_name: kong
    ports:
      - "8000:8000"    # Proxy
      - "8443:8443"    # Proxy (SSL)
      - "8001:8001"    # Admin
      - "8002:8002"    # GUI
      - "8444:8444"    # Admin (SSL)
    environment:
      - KONG_DATABASE=off       # Disable database mode
      - KONG_DECLARATIVE_CONFIG=/etc/kong/kong.yml # Use kong.yml for configuration
      - KONG_ADMIN_LISTEN=0.0.0.0:8001,0.0.0.0:8444 ssl
      - KONG_ADMIN_GUI_URL=http://localhost:8002
      - KONG_LOG_LEVEL=notice
      - KONG_PORT=8000
      - KONG_PORT_SSL=8443
      - KONG_PLUGINS=bundled,auth-validator
      - KONG_LUA_PACKAGE_PATH=/etc/kong/custom-plugins/?.lua;/etc/kong/custom-plugins/?/init.lua;;
    volumes:
      - ./config:/etc/kong
      - ./config/custom-plugins:/etc/kong/custom-plugins
    depends_on:
      - user-service
      - auth-service
      - expense-service
      - data-service

volumes:
  mysql-db:
    driver: local